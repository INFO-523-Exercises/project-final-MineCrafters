---
title: "SoleMate"
subtitle: "Your ultimate footwear matchmaker"
format: html
code-fold: true
editor: visual
---

## Project Objective

The high-level goal of this project is developing a State-of-the-Art Shoe Recommendation System.

In an era where fashion and comfort go hand in hand, the **SoleMate** shoe recommendation system aims to revolutionize the way people choose their footwear. Footwear selection is a highly subjective and personal decision, influenced by various factors like preferred brand, price and discount, lifestyle, and fashion preferences. To address this, our project aims to develop a state-of-the-art machine learning-based recommendation system to assist individuals in finding the perfect pair of shoes that suits their unique needs.

To deliver a better seamless and highly personalized shopping experience for shoe enthusiasts, we came up with idea of **SoleMate**. By leveraging the power of machine learning algorithms, our system will take into account a wide array of factors to generate tailored shoe recommendations for users.

## Dataset

```{r, echo=TRUE, results='hide'}
#| label: load-dataset
#| message: false

#> Installing necessary libraries 

library(tidyverse)

#> Loading the Dataset - solemate

solemate <- read.csv("data/solemate.csv")



```

The dataset comes from the [Kaggle Database](https://www.kaggle.com/datasets/kaushiksuresh147/adidas-vs-nike). The dataset consists of 3268 products from Nike and Adidas with various features of information including their `ratings`, `discount`, `sales price`, `listed price`, `product description`, and the `number of reviews`. With this sizeable and diverse sample of shoes from these two most popular brands, this dataset promises to serve as a foundational resource for building the **SoleMate** system. The table representing the features in the dataset and their description is presented below.

| Feature       | Data Type | Description                                         |
|---------------|---------------|------------------------------------------|
| Product Name  | Character | Name of the product                                 |
| Product ID    | Character | Unique product ID                                   |
| Listing Price | Integer   | Price of the product as listed                      |
| Sales Price   | Integer   | Price after applying discount rate                  |
| Discount      | Integer   | Discount percent provided on the product            |
| Brand         | Character | Brand of the product                                |
| Description   | Character | Description of the product                          |
| Rating        | Float     | Rating provided for the product by users (out of 5) |
| Reviews       | Integer   | Number of reviews provided on the product           |
| Last visited  | DateTime  | Last visit on the product by a customer             |

## Question

What are the optimal shoe options based on the user's preferences?

## Analysis plan

By following the below analysis plan, the project can efficiently implement a robust recommendation system that enhances the footwear shopping experience for users.

-   Exploratory Data Analysis (EDA):

    -   Acquire and load the dataset for both shoe brands.
    -   Explore the dataset to understand its structure and the variables it contains.
    -   Visualize data distributions, identify outliers, and check for missing values.
    -   Analyze customer reviews and ratings to gain insights into user preferences.

-   Data Preprocessing:

    -   Clean the data by addressing missing values and outliers.
    -   Transform categorical variables into numerical representations (e.g., one-hot encoding for brand, material, and style).
    -   Split the data into training and testing sets for model evaluation.

-   Data Visualization

    -   Visualizing the favourite shoe brand based on the customer rating and the number of reviews.

-   Feature Engineering:

    -   Create additional features if necessary, such as sentiment analysis scores for customer reviews.

-   Training and Testing:

    -   Select machine learning algorithms suitable for recommendation tasks, such as collaborative filtering, content-based filtering, and hybrid methods.
    -   Train multiple recommendation models on the training data.
    -   Evaluate model performance using testing data.

-   Model Evaluation:

    -   Utilize metrics like Mean Absolute Error (MAE), Root Mean Square Error (RMSE), and accuracy to assess each model's performance.
    -   Compare the results to determine which models are the most effective in making recommendations.

-   Choosing the Best Model:

    -   Select the model with the lowest error or highest accuracy, depending on the chosen evaluation metric.

## Plan of Attack

|             Week             |                              Weekly Tasks                              | Team members involved |
|:---------------------:|:-------------------------:|:---------------------:|
|     Till November 8^th^      |      Explore and finalize the dataset and the problem statements       |       Everyone        |
|              \-              |         Complete the proposal and assign some high-level tasks         |       Everyone        |
|     Nov. 9^th^ - 15^th^      |                       Exploratory Data Analysis                        |      Hari, Syed       |
|              \-              |           Data cleaning and Data pre-processing based on EDA           | Partha, Vinu, Sarthak |
|              \-              | Question specific exploration and identify initial trends and patterns |     Sarthak, Syed     |
|     Nov. 16^th^ - 22^nd^     |                           Data Preprocessing                           |      Hari, Vinu       |
|              \-              |                           Data Visualization                           |    Partha, Sarthak    |
|     Nov. 23^rd^ - 29^th^     |                          Feature Engineering                           |      Hari, Syed       |
|              \-              |                          Training and Testing                          | Partha, Vinu, Sarthak |
| Nov. 30^th^ - December 6^th^ |            Refining the code for code review with comments             |     Sarthak, Syed     |
|              \-              |                            Model Evaluation                            |     Hari, Partha      |
|     Dec. 7^th^ - 11^th^      |                        Choosing the Best Model                         |       Everyone        |
|              \-              |               Write-up and presentation for the project                |       Everyone        |

## Repo Organization

The following are the folders involved in the Project repository.

-   **data/:** Used for storing any necessary data files for the project, such as input files.

-   **images/:** Used for storing image files used in the project.

-   **presentation_files/:** Folder for having presentation related files.

-   **\_extra/:** Used to brainstorm our analysis which won't impact our project workflow.

-   **\_freeze/:** This folder is used to store the generated files during the build process. These files represent the frozen state of the website at a specific point in time.

-   **\_site/:** Folder used to store the generated static website files after the site generator processes the quarto document.

-   **.github/:** Folder for storing github templates and workflow.
