---
title: "Brick-Metrics"
subtitle: "Building Precision in Predicting USA Home Prices"
format: html
code-fold: true
editor: visual
---
## Project Objective

The primary objective of this project is to develop a predictive model for housing prices in the US.  

This project centers around utilizing the USA_Housing dataset to build a predictive model for housing prices. The project aims to create a robust and accurate model that can estimate housing prices for given sets of input variables by employing regression algorithms. By leveraging machine learning techniques, the goal is to analyze the relationships between various features such as Average Area Income, Average Area House Age, Average Area of Rooms, Average Area of bedrooms, and Area Population, and predict the housing prices based on these factors. 

Through exploratory data analysis, feature engineering, and machine learning modeling, the project will uncover patterns, correlations, and dependencies within the dataset. Subsequently, a regression model will be trained to understand and quantify the influence of each feature on the housing prices. The model's performance will be evaluated using metrics such as mean squared error or R-squared, ensuring its reliability and accuracy.




## Dataset


```{r, echo=TRUE, results='hide'}
#| label: load-dataset
#| message: false

#> Installing necessary libraries 

library(tidyverse)

#> Loading the Dataset - solemate

brickMetrics <- read.csv("data/USA_Housing.csv")



```

The dataset comes from the [Kaggle Database](https://www.kaggle.com/datasets/aariyan101/usa-housingcsv/data). The dataset consists of 5000 observations related to houses accross the United States with various features of information including their `Average Area Income`, `Average Area House Age`, `Average Area Number of Rooms`, `Average Area Number of Bedrooms`, `Area Population`,`Address`, and `Price`
With this sizeable and diverse sample of housing data, this dataset promises to serve as a foundational resource for building the **Brick-Metrics** system. The table representing the features in the dataset and their description is presented below.


| Feature       | Data Type | Description                                         |
|---------------|---------------|------------------------------------------|
| Avg. Area Income  | Integer | Average Area Income of the population in the specific location     |
| Avg. Area House Age    | Integer | Average Area House Age                                  |
| Avg. Area Number of Rooms | Integer   | Average Area of total Number of Rooms             |
| Average Area Number of Rooms  | Integer   | Average Area of total Number of Bedrooms        |
| Area Population      | Integer   | Population of the place          |
| Address        | Character | Address of the house                               |
| Price  | Integer | Price of the house                         |

## Question

How accurately can the housing prices in the US be predicted?

## Analysis plan

By following the below analysis plan, the project can efficiently implement a robust recommendation system that enhances the development of the prediction system.

-   Exploratory Data Analysis (EDA):

    -   Acquire and load the dataset.
    -   Explore the dataset to understand its structure and the variables it contains.
    -   Visualize data distributions, identify outliers, and check for missing values.
    -   Analyze customer reviews and ratings to gain insights into user preferences.

-   Data Preprocessing:

    -   Clean the data by addressing missing values and outliers.
    -   Transform categorical variables into numerical representations (e.g., one-hot encoding for brand, material, and style).
    -   Split the data into training and testing sets for model evaluation.

-   Data Visualization

    -   Visualizing the necessary correlations.

-   Feature Engineering:

    -   Create additional features if necessary.

-   Training and Testing:

    -   Select machine learning algorithms suitable for prediction like regression models.
    -   Train multiple models on the training data.
    -   Evaluate model performance using testing data.

-   Model Evaluation:

    -   Utilize metrics like Mean Absolute Error (MAE), Root Mean Square Error (RMSE), and accuracy to assess each model's performance.
    -   Compare the results to determine which models are the most effective in making recommendations.

-   Choosing the Best Model:

    -   Select the model with the lowest error or highest accuracy, depending on the chosen evaluation metric.

## Plan of Attack

|             Week             |                              Weekly Tasks                              | Team members involved |
|:---------------------:|:-------------------------:|:---------------------:|
|     Till November 8^th^      |      Explore and finalize the dataset and the problem statements       |       Everyone        |
|              \-              |         Complete the proposal and assign some high-level tasks         |       Everyone        |
|     Nov. 9^th^ - 15^th^      |                       Exploratory Data Analysis                        |      Hari, Syed       |
|              \-              |           Data cleaning and Data pre-processing based on EDA           | Partha, Vinu, Sarthak |
|              \-              | Question specific exploration and identify initial trends and patterns |     Sarthak, Syed     |
|     Nov. 16^th^ - 22^nd^     |                           Data Preprocessing                           |      Hari, Vinu       |
|              \-              |                           Data Visualization                           |    Partha, Sarthak    |
|     Nov. 23^rd^ - 29^th^     |                          Feature Engineering                           |      Hari, Syed       |
|              \-              |                          Training and Testing                          | Partha, Vinu, Sarthak |
| Nov. 30^th^ - December 6^th^ |            Refining the code for code review with comments             |     Sarthak, Syed     |
|              \-              |                            Model Evaluation                            |     Hari, Partha      |
|     Dec. 7^th^ - 11^th^      |                        Choosing the Best Model                         |       Everyone        |
|              \-              |               Write-up and presentation for the project                |       Everyone        |

## Repo Organization

The following are the folders involved in the Project repository.

-   **data/:** Used for storing any necessary data files for the project, such as input files.

-   **images/:** Used for storing image files used in the project.

-   **presentation_files/:** Folder for having presentation related files.

-   **\_extra/:** Used to brainstorm our analysis which won't impact our project workflow.

-   **\_freeze/:** This folder is used to store the generated files during the build process. These files represent the frozen state of the website at a specific point in time.

-   **\_site/:** Folder used to store the generated static website files after the site generator processes the quarto document.

-   **.github/:** Folder for storing github templates and workflow.
