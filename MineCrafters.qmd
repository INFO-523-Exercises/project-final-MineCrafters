---
jupyter: python3

title: "Brick-Metrics"
subtitle: "Building Precision in Predicting USA Home Prices"
author: "MineCrafters"

code-fold: true
---


## Abstract

This project is aimed at the development and evaluation of regression models for predicting housing prices using a dataset titled 'USA_Housing.csv.' The overarching goal is to construct robust and accurate models through the application of various machine learning algorithms. The project follows a systematic workflow, encompassing data exploration, feature engineering, model training, hyperparameter tuning, and comprehensive performance evaluation.

The initial phase involves the importation of essential Python libraries, such as NumPy, Pandas, Matplotlib, Seaborn, and scikit-learn, conducting an in-depth exploratory data analysis (EDA), unveiling insights into data distributions, correlations, and potential preprocessing requirements. Visualizations, including histograms, bar plots, and heatmaps, aid in understanding the dataset's characteristics.

Further, the project employs a diverse set of regression models, including Decision Tree Regressor, Random Forest Regressor, XGBoost Regressor, Support Vector Regression (SVR), and Elastic Net Regression. Thus, the project provides a practical implementation of regression modeling for housing price prediction




```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import OrdinalEncoder
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
import xgboost as xgb
from xgboost import XGBRegressor
from sklearn.metrics import r2_score
from sklearn.metrics import mean_squared_error, mean_absolute_error
from sklearn.linear_model import ElasticNet
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import StandardScaler
```

```{python}
# Reading csv file
data = pd.read_csv('USA_Housing.csv')
data
```

# Exploratory Data Analysis

```{python}
data.info()#print a concise summary of a DataFrame
```

```{python}
# Checking null values
data.isnull().sum()
```

```{python}
data.describe()# Generate descriptive statistics summarizing central tendency, dispersion, and shape of dataset's distribution.
```

```{python}
# Data Claening
df = pd.DataFrame()
df['Income'] = data['Avg. Area Income'].round(2)# Round 'Avg. Area Income' to 2 decimal places and store in 'Income'.
df['House Age'] = data['Avg. Area House Age'].apply(int)# Converting 'Avg. Area House Age' to integers and adding it to 'df' as 'House Age'.
df['No. of Rooms'] = data['Avg. Area Number of Rooms'].apply(int)# Converting 'Avg. Area Number of Rooms' to integers and adding it to 'df' as 'No. of Rooms'.
df['No. of Bedrooms'] = data['Avg. Area Number of Bedrooms'].apply(int)# Converting 'Avg. Area Number of Bedrooms' to integers and adding it to 'df' as 'No. of Bedrooms'.
df['Population'] = data['Area Population'].apply(int)# Converting 'Area Population' to integers and adding it to 'df' as 'Population'.
df['Price'] = data['Price'].apply(int)# Converting 'Price' to integers and adding it to 'df' as 'Price'.
```

```{python}
sns.displot(data['Avg. Area Number of Bedrooms'], kde=False, bins=40)
```

```{python}
# Price plot
plt.figure(figsize = (12, 6), dpi = 200)
sns.distplot(data.Price)
```

```{python}
# Price wrt Income
plt.figure(figsize = (12, 6), dpi = 200)
sns.lineplot(x = 'Income', y = 'Price', data = df)
```

